<Shader>
	<VertexShader>
		<Code>
			#version 110
			attribute float IndxAttrib;

			uniform vec2 Position[64]; 
			uniform vec4 QuadData[64]; 
			uniform vec4 Params[4];
			
			varying vec4 InterpolatedData;
			varying vec4 Data1;
			varying vec2 Texcoord;
			varying float Grade;

			//Shitty Intel 
			const vec4 TexCoordArrayX = vec4(0.0, 1.0, 1.0, 0.0);
			const vec4 TexCoordArrayY = vec4(0.0, 0.0, 1.0, 1.0);

			void main( void )
			{
				int VertexId = int(IndxAttrib);
				int QuadId = ((VertexId)/4)*4;
				
				Data1 = QuadData[QuadId+0];

				gl_Position = vec4(Position[VertexId], -1.0, 1.0);
				vec2 TC = vec2(TexCoordArrayX[VertexId-QuadId], TexCoordArrayY[VertexId-QuadId]);
				Texcoord =  TC*Data1.zw+Data1.xy;
			////		Grade = (PosTex.w-PosTexCoord[QuadId+2].w-Data1.z)/(PosTexCoord[QuadId+0].w-PosTexCoord[QuadId+2].w-Data1.z*2); 

				//Grade = TexCoordArray[VertexId-QuadId].y  * (1.0+Params[0].z*2.0*Data1.w)-Params[0].z*Data1.w;				
				//Grade = (Texcoord.y-(Data1.w+Data1.y)-Params[0].z)/(Data1.y-Data1.w+Data1.y)-Params[0].z*2.0);
				//Grade = (-TexCoordArray[VertexId-QuadId].y+1.0+Data1.y/Data1.w*2.0+Params[0].z/Data1.w)/(-Params[0].z*2.0);
			//Grade = (1.0-TexCoordArray[VertexId-QuadId].y)/(1.0+2.0*Params[0].z/Data1.w)+1.0/(Data1.w/Params[0].z+2.0);
				//	Grade = (-TexCoordArray[VertexId-QuadId].y+1.0-Params[0].z/(-Data1.w))/(1.0-Params[0].z/(-Data1.w)*2.0);
				Grade = (Params[0].z + Data1.w - Data1.w * TC.y) / (2.0 * Params[0].z + Data1.w);

			}
		</Code>
	</VertexShader>
	
	<FragmentShader>
		<Code>
			#version 120
			uniform sampler2D Map0;

			varying vec2 Texcoord;
			varying float Grade;
			
			uniform vec4 Params[4];
			
			void main( void )
			{
				gl_FragColor = texture2D(Map0, Texcoord.xy);
				float dist = texture2D(Map0, Texcoord.xy).r;
				float k = min(Params[0].y,Params[0].x);
				vec3 Color = mix(Params[1].xyz, Params[2].xyz, Grade); 
				Color = mix(Color, Params[3].xyz, smoothstep(0.5 - k - Params[0].y,0.5 - k - Params[0].y, dist)*(1-smoothstep(0.5 - k,0.5 + k, dist)));
				gl_FragColor = vec4(Color,Params[1].w*smoothstep(0.5 - Params[0].x - Params[0].y,0.5 + Params[0].x - Params[0].y, dist));
			}
		</Code> 
	</FragmentShader>
</Shader>
