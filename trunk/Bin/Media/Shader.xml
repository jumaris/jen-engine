<Shader>
	<VertexShader>
		<InsCode code="utilityLib/fragDeferredRead.glsl" />
		<Code>
			varying vec2 texCoords;
				
			void main( void )
			{
				texCoords = gl_MultiTexCoord0.st;
				gl_Position = gl_ProjectionMatrix * gl_Vertex;
			}
		</Code>
	</VertexShader>
	
	<FragmentShader>
		<Code>
			varying vec2 texCoords;
				
			void main( void )
			{
				if( getMatID( texCoords ) == 1.0 )	// Standard phong material
				{
					float vsPos = (gl_ModelViewMatrix * vec4( getPos( texCoords ), 1.0 )).z;
						
					gl_FragColor.rgb =
						calcPhongSpotLight( getPos( texCoords ), getNormal( texCoords ),
												getAlbedo( texCoords ), getSpecMask( texCoords ), 16.0, -vsPos, 0.3 );
				}
				else discard;
			}
		</DefCode> 
	</FragmentShader>
</Shader>